{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repositorios\\\\netflixclone\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\nexport default (() => {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando a lista TOTAL\n      let list = await Tmdb.getHomeList();\n      setMovieList(list); //Pegando o Featured\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randonChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randonChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), featuredData && /*#__PURE__*/React.createElement(FeaturedMovie, {\n    item: featuredData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"lists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, movieList.map((item, key) => /*#__PURE__*/React.createElement(MovieRow, {\n    key: key,\n    title: item.title,\n    items: item.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }))));\n});","map":{"version":3,"sources":["C:/Repositorios/netflixclone/src/App.js"],"names":["React","useEffect","useState","Tmdb","MovieRow","FeaturedMovie","Header","movieList","setMovieList","featuredData","setFeaturedData","loadAll","list","getHomeList","originals","filter","i","slug","randonChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","map","item","key","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,gBAAe,MAAM;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,IAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMU,OAAO,GAAG,YAAY;AAC1B;AACA,UAAIC,IAAI,GAAG,MAAMT,IAAI,CAACU,WAAL,EAAjB;AACAL,MAAAA,YAAY,CAACI,IAAD,CAAZ,CAH0B,CAK1B;;AACA,UAAIE,SAAS,GAAGF,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAGA,CAAC,CAACC,IAAF,KAAW,WAA3B,CAAhB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,GAAoC,CAArD,CAAX,CAAnB;AACA,UAAIC,MAAM,GAAGX,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,YAA3B,CAAb;AACA,UAAIQ,UAAU,GAAG,MAAMvB,IAAI,CAACwB,YAAL,CAAkBF,MAAM,CAACG,EAAzB,EAA6B,IAA7B,CAAvB;AACAlB,MAAAA,eAAe,CAACgB,UAAD,CAAf;AACD,KAXD;;AAYAf,IAAAA,OAAO;AACV,GAdQ,EAcP,EAdO,CAAT;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAECF,YAAY,iBACX,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAIA,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAOA;AAAS,IAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACsB,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,kBACb,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAf;AAAoB,IAAA,KAAK,EAAID,IAAI,CAACE,KAAlC;AAAyC,IAAA,KAAK,EAAIF,IAAI,CAACR,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAPA,CADF;AAeD,CArCD","sourcesContent":["import React, {useEffect, useState } from 'react'\nimport './App.css'\nimport Tmdb from './Tmdb'\nimport MovieRow from './components/MovieRow'\nimport FeaturedMovie from './components/FeaturedMovie'\nimport Header from './components/Header'\n\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([])\n  const [featuredData, setFeaturedData] = useState(null)\n\n  useEffect( ()=>  {\n      const loadAll = async () => {\n        //Pegando a lista TOTAL\n        let list = await Tmdb.getHomeList()\n        setMovieList(list)\n\n        //Pegando o Featured\n        let originals = list.filter(i=> i.slug === 'originals')\n        let randonChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n        let chosen = originals[0].items.results[randonChosen]\n        let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n        setFeaturedData(chosenInfo)\n      }\n      loadAll()\n  },[])\n\n\n  return (\n    <div className = \"page\">\n      <header/>\n    {featuredData && \n      <FeaturedMovie item = {featuredData}/>\n\n    }\n\n    <section className=\"lists\">\n      {movieList.map((item, key)=>(\n        <MovieRow key={key} title = {item.title} items = {item.items} />\n      ))}\n      </section>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}